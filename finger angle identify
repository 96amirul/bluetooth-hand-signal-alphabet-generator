#include <SoftwareSerial.h>
SoftwareSerial Bluetooth(10, 9); // RX, 
const int flexPin1 = A0;      // Pin connected to voltage divider output
const int flexPin2 = A1;      // Pin connected to voltage divider output
const int flexPin3 = A2;      // Pin connected to voltage divider output
const int flexPin4 = A3;      // Pin connected to voltage divider output
const int flexPin5 = A4;      // Pin connected to voltage divider output
int Data;                     // the data received

// Change these constants according to your project's design
const float VCC = 5;      // voltage at Ardunio 5V line
const float R_DIV = 6800.0;  // resistor used to create a voltage divider
const float flatResistance = 25000.0; // resistance when flat
const float bendResistance = 100000.0;  // resistance at 90 deg

void setup() {
  Bluetooth.begin(9600);
  Serial.println("Waiting for command...");
  Bluetooth.println("Angle Retracted from Flex sensor:");
  Serial.begin(9600);
  pinMode(flexPin1, INPUT);
  pinMode(flexPin2, INPUT);
  pinMode(flexPin3, INPUT);
  pinMode(flexPin4, INPUT);
  pinMode(flexPin5, INPUT);
}

void loop() {
  //1
  // Read the ADC, and calculate voltage and resistance from it
  int ADCflex1 = analogRead(flexPin1);
  float Vflex1 = ADCflex1 * VCC / 1023.0;
  float Rflex1 = R_DIV * (VCC / Vflex1 - 1.0);
  Serial.println("Resistance1: " + String(Rflex1) + " ohms");
  Bluetooth.println("Resistance1: " + String(Rflex1) + " ohms");
  
  // Use the calculated resistance to estimate the sensor's bend angle:
  float angle1 = map(Rflex1, flatResistance, bendResistance, 0, 90.0);
  Serial.println("Bend1: " + String(angle1) + " degrees");
  Bluetooth.println("Bend1: " + String(angle1) + " degrees");

  //2
  // Read the ADC, and calculate voltage and resistance from it
  int ADCflex2 = analogRead(flexPin2);
  float Vflex2 = ADCflex2 * VCC / 1023.0;
  float Rflex2 = R_DIV * (VCC / Vflex2 - 1.0);
  Serial.println("Resistance2: " + String(Rflex2) + " ohms");
  Bluetooth.println("Resistance2: " + String(Rflex2) + " ohms");
  
  // Use the calculated resistance to estimate the sensor's bend angle:
  float angle2 = map(Rflex2, flatResistance, bendResistance, 0, 90.0);
  Serial.println("Bend2: " + String(angle2) + " degrees");
  Bluetooth.println("Bend2: " + String(angle2) + " degrees");

  //3
  // Read the ADC, and calculate voltage and resistance from it
  int ADCflex3 = analogRead(flexPin3);
  float Vflex3 = ADCflex3 * VCC / 1023.0;
  float Rflex3 = R_DIV * (VCC / Vflex3 - 1.0);
  Serial.println("Resistance3: " + String(Rflex3) + " ohms");
  Bluetooth.println("Resistance3: " + String(Rflex3) + " ohms");
  
  // Use the calculated resistance to estimate the sensor's bend angle:
  float angle3 = map(Rflex3, flatResistance, bendResistance, 0, 90.0);
  Serial.println("Bend3: " + String(angle3) + " degrees");
  Bluetooth.println("Bend3: " + String(angle3) + " degrees");

  //4
  // Read the ADC, and calculate voltage and resistance from it
  int ADCflex4 = analogRead(flexPin4);
  float Vflex4 = ADCflex4 * VCC / 1023.0;
  float Rflex4 = R_DIV * (VCC / Vflex4 - 1.0);
  Serial.println("Resistance4: " + String(Rflex4) + " ohms");
  Bluetooth.println("Resistance4: " + String(Rflex4) + " ohms");
  
  // Use the calculated resistance to estimate the sensor's bend angle:
  float angle4 = map(Rflex4, flatResistance, bendResistance, 0, 90.0);
  Serial.println("Bend4: " + String(angle4) + " degrees");  
  Bluetooth.println("Bend4: " + String(angle4) + " degrees");

  //5
  // Read the ADC, and calculate voltage and resistance from it
  int ADCflex5 = analogRead(flexPin5);
  float Vflex5 = ADCflex5 * VCC / 1023.0;
  float Rflex5 = R_DIV * (VCC / Vflex5 - 1.0);
  Serial.println("Resistance5: " + String(Rflex5) + " ohms");
  Bluetooth.println("Resistance5: " + String(Rflex5) + " ohms");
  
  // Use the calculated resistance to estimate the sensor's bend angle:
  float angle5 = map(Rflex5, flatResistance, bendResistance, 0, 90.0);
  Serial.println("Bend5: " + String(angle5) + " degrees");
  Bluetooth.println("Bend5: " + String(angle5) + " degrees");
  Serial.println();  
  Bluetooth.println();
  
  delay(5000);
}
